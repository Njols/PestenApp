@using PestApp.Models
@using Enums;
@using System.Collections;
@using System.Linq;
@{
    ViewData["Title"] = "CreateRuleSet";
}

<h2>CreateRuleSet</h2>
@model CreateRuleSetViewModel
<span class="text-danger">@ViewData["Error"]</span>
<div id="ruleSection">
    <h2>Add a card-specific rule</h2>
    @using (Html.BeginForm("AddRule", "RuleSet", FormMethod.Post))
    {
        <div id="ruleSelection">
            <p>When a(n) @Html.DropDownListFor(m => m.Face, Model.CardFaceSelectList)</p>
            <input name="CheckBox" id="CheckBox" type="checkbox" value="true" onclick="thefunction()" style="display:inline" /><p style="display:inline">of</p>
            <div id="cardSuitContainer" style="display:none"> @Html.DropDownListFor(m => m.Suit, Model.CardSuitSelectList)</div>
            <p>is played,</p>
            <select name="Type" onchange="CheckAmountBox()" id="typeSelect" style="display:inline">
                @foreach (DropDownListItem item in Model.DropDownListItems)
                {
                    @if (item.HasAmount)
                    {
                        <option value="@item.PostValue" id="amounted">@item.Name</option>
                    }
                    else
                    {
                        <option value="@item.PostValue" id="amountless">@item.Name</option>
                    }
                }
            </select>
            <div id="ruleDisplay">
                <p id="firstText" style="display:inline"></p>
                <input id="amountBox" type="number" name="RuleAmount" min="1" style="display:inline" />
                <p id="lastText" style="display:inline"></p>
            </div>
            <input id="addButton" type="submit" value="Add Rule" name="command" />
            <script>
        var displayStringArray = @Html.Raw(Json.Serialize(Model.RuleTypeDisplayStrings));

        var firstParagraph = document.getElementById("firstText");
        var lastParagraph = document.getElementById("lastText");
        var amountBox = document.getElementById("amountBox");
        var typeSelect = document.getElementById("typeSelect")

        function CheckAmountBox() {
            var selectedOption = typeSelect.options[typeSelect.selectedIndex];
            if (selectedOption.id.toString() == "amountless") {
                amountBox.style.display = "none";
                amountBox.textContent = null;
                lastParagraph.innerHTML = displayStringArray[typeSelect.selectedIndex];
            }
            else {
                amountBox.style.display = "inline-block";
                var str = displayStringArray[typeSelect.selectedIndex]
                firstParagraph.innerHTML = str.split("|")[0];
                lastParagraph.innerHTML = str.split("|")[1];
            }
        }
        window.onload(CheckAmountBox());
            </script>
        </div>
    }
    @using (Html.BeginForm("RemoveRule", "RuleSet", FormMethod.Post))
    {
        <div id="ruleList" class="scrollableBox">
            <div id="id">
                @for (int i = 0; i < Model.DisplayRules.Count(); i++)
                {
                <p>
                    @Model.DisplayRules.ElementAt(i).Card.GetCard() @Model.DisplayRules.ElementAt(i).RuleType.GetDisplayString()
                    <button name="command" value="@i">X</button>
                </p>
                }
            </div>
        </div>
    }
</div>
<div id="additionalRuleSection">
    <h2>Add a general rule</h2>
    @using (Html.BeginForm("AddAdditionalRule", "RuleSet", FormMethod.Post))
    {
        <div id="additionalRuleSelection">
            <select name="AdditionalRule" style="display:inline">
                @foreach (additionalRule item in Model.DropDownAddRules)
                {
                    <option value="@item">@EnumHelperClass.EnumDisplayNameFor(item)</option>
                }
            </select>
            <input id="addExtraRule" type="submit" value="Add Extra Rule" name="command" />
        </div>
    }

    @using (Html.BeginForm("RemoveAdditionalRule", "RuleSet", FormMethod.Post))
    {
        <div id="addRuleList" class="scrollableBox">
            @for (int i = 0; i < Model.AdditionalRules.Count; i++)
            {
                <p>
                    @EnumHelperClass.EnumDisplayNameFor(Model.AdditionalRules[i])
                    <button name="command" value="@i">X</button>
                </p>
            }
        </div>
    }
</div>

<div style="width:100%; align-items:center; height:250px; display:inline-block">
    @using (Html.BeginForm("SaveRuleSet", "RuleSet", FormMethod.Post))
    {

        @Html.TextBoxFor(m => m.Name)
        <input type="submit" value="Save Rule Set" />

    }
</div>